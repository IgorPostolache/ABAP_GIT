*&---------------------------------------------------------------------*
*& Module Pool       ZIP_P_TEST_000
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

PROGRAM zip_p_test_000.

DATA: ok_code            LIKE sy-ucomm,
      save_ok            LIKE sy-ucomm,

      g_container        TYPE scrfname VALUE 'BCALV_GRID_DEMO_0100_CONT1',
      g_custom_container TYPE REF TO cl_gui_custom_container,
      g_grid             TYPE REF TO cl_gui_alv_grid,
      gs_layout          TYPE lvc_s_layo.

DATA: BEGIN OF gt_outtab OCCURS 0.
        INCLUDE STRUCTURE zip_sflight.
DATA: celltab TYPE lvc_t_styl.
DATA: END OF gt_outtab.

CLASS lcl_report DEFINITION.
  PUBLIC SECTION.
    CLASS-METHODS:
      exit_program,
      switch_edit_mode,
      get_data,
      display_grid,
      fill_celltab,
      fill_cell
        IMPORTING
          p_cell    TYPE string
          p_enabled TYPE c OPTIONAL,
      save.

  PRIVATE SECTION.
    CLASS-DATA:
      lt_pasajeros TYPE TABLE OF zip_sflight,
      lt_celltab   TYPE lvc_t_styl,
      l_index      TYPE i,
      ls_styletab  TYPE lvc_t_styl.

ENDCLASS.

CLASS lcl_report IMPLEMENTATION.
  METHOD fill_celltab.

    LOOP AT gt_outtab ASSIGNING FIELD-SYMBOL(<gs_outtab>).

      REFRESH <gs_outtab>-celltab.

      fill_cell(  p_cell = 'DNI' ).
      fill_cell(  p_cell = 'AGE' p_enabled = 'X' ).

      INSERT LINES OF ls_styletab INTO TABLE <gs_outtab>-celltab.

      MODIFY gt_outtab FROM <gs_outtab>.

    ENDLOOP.

  ENDMETHOD.

  METHOD fill_cell.
    DATA:
      ls_stylerow TYPE lvc_s_styl,
      l_mode      TYPE raw4.

    IF p_enabled = 'X'.
      l_mode = cl_gui_alv_grid=>mc_style_enabled.

    ELSE.
      l_mode = cl_gui_alv_grid=>mc_style_disabled.
    ENDIF.

    REFRESH ls_styletab.

    ls_stylerow-fieldname = p_cell.
    ls_stylerow-style = l_mode.

    APPEND ls_stylerow TO ls_styletab.

  ENDMETHOD.

  METHOD get_data.
    DATA: gs_outtab LIKE LINE OF gt_outtab.

    SELECT * FROM zip_sflight INTO TABLE lt_pasajeros.

    LOOP AT lt_pasajeros ASSIGNING FIELD-SYMBOL(<ls_pasajeros>).
      MOVE-CORRESPONDING <ls_pasajeros> TO gs_outtab.
      APPEND gs_outtab TO gt_outtab.
    ENDLOOP.

    fill_celltab(  ).

    display_grid(  ).

  ENDMETHOD.

  METHOD exit_program.
    LEAVE PROGRAM.
  ENDMETHOD.

  METHOD switch_edit_mode.
    IF g_grid->is_ready_for_input(  ) EQ 0.
      CALL METHOD g_grid->set_ready_for_input
        EXPORTING
          i_ready_for_input = 1.
    ELSE.
      CALL METHOD g_grid->set_ready_for_input
        EXPORTING
          i_ready_for_input = 0.
    ENDIF.
  ENDMETHOD.

  METHOD display_grid.

    gs_layout-stylefname = 'CELLTAB'.

    CALL METHOD g_grid->set_table_for_first_display
      EXPORTING
        i_structure_name = 'ZIP_SFLIGHT'
        is_layout        = gs_layout
      CHANGING
        it_outtab        = gt_outtab[].

  ENDMETHOD.

  METHOD save.

    IF g_grid IS INITIAL.
      CALL FUNCTION 'GET_GLOBALS_FROM_SLVC_FULLSCR'
        IMPORTING
          e_grid = g_grid.
    ENDIF.

    IF g_grid IS NOT INITIAL.

      DATA:
            v_edited TYPE char1,
            ls_pasajeros TYPE zip_pasajeros.

      CALL METHOD g_grid->check_changed_data
        IMPORTING
          e_valid = v_edited.

      IF v_edited = 'X'.

        LOOP AT gt_outtab ASSIGNING FIELD-SYMBOL(<gs_outtab>).
          MOVE-CORRESPONDING <gs_outtab> TO ls_pasajeros .
          MODIFY zip_sflight FROM ls_pasajeros .
        ENDLOOP.

        switch_edit_mode(  ).

        MESSAGE `DB successefull updated.` TYPE 'I'.

      ENDIF.

    ENDIF.

  ENDMETHOD.
ENDCLASS.

MODULE pbo OUTPUT.
  SET PF-STATUS 'MAIN100'.
  SET TITLEBAR 'MAIN100'.

  IF g_custom_container IS INITIAL.
    CREATE OBJECT g_custom_container
      EXPORTING
        container_name = g_container.

    CREATE OBJECT g_grid
      EXPORTING
        i_parent = g_custom_container.

    lcl_report=>get_data(  ).

  ENDIF.
ENDMODULE.

MODULE pai INPUT.
  save_ok = ok_code.
  CLEAR ok_code.

  CASE save_ok.
    WHEN 'EXIT'.
      lcl_report=>exit_program(  ).
    WHEN 'SAVE'.
      lcl_report=>save(  ).
    WHEN 'SWITCH'.
      lcl_report=>switch_edit_mode(  ).
  ENDCASE.
ENDMODULE.